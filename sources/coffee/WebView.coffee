# *********************************
# *********************************
# WebView
# *********************************
# ** By Etienne Pinchon
# ** Â©2016

class WebView extends View
	constructor: (properties) ->
		super

		@_sandbox = {}

		# The contentWindow property returns the Window object generated by an iframe element 
		# (through the window object, you can access the document object and then any one of the document's elements).
		@content = @_element.contentWindow
		@document = @_element.contentDocument
		
		#this.on Event.Load, ->
		#	@content = @_element.contentWindow
		#	@document = @_element.contentDocument


	_kind : 'WebView'
	_elementType : 'iframe'

	onLoad : (cb) -> @on Event.Load, cb
	onLoaded : (cb) -> @on Event.Loaded, cb
	onDone : (cb) -> @on Event.Loaded, cb

	##############################################################
	# Properties

	@define 'url',
		get: ->
			if @_url is undefined
				@_url = ''
			@_url
		set: (value) ->
			@_url = value
			@_element.setAttribute 'src', value
			return

	# ALIAS
	@define 'src',
		get: ->
			@url
		set: (value) ->
			@url = value
			return


	# *********************************

	@_def_enabled = (name) ->
		@define name,
			get: ->
				return true if @["_#{name}"] is undefined	
				@["_#{name}"]
			set: (value) ->
				value = false if value isnt true
				@["_#{name}"] = value
				@['_' + name.replace('Enabled', '')] = value
				@_updateSandbox()

	@_def_enabled 'scriptsEnabled'
	@_def_enabled 'formsEnabled'
	@_def_enabled 'popupsEnabled'
	@_def_enabled 'pointerLockEnabled'
	@_def_enabled 'sameOriginEnabled'
	@_def_enabled 'navigationEnabled'


	# *********************************
		

WebView::reload = ->
	@_element.contentWindow.location.reload()
	return

###
** SANDBOX **
*	allow-forms	Re-enables form submission
*	allow-pointer-lock	Re-enables APIs
*	allow-popups	Re-enables popups
*	allow-same-origin	Allows the iframe content to be treated as being from the same origin
*	allow-scripts	Re-enables scripts
*	allow-top-navigation	Allows the iframe content to navigate its top-level browsing context
###

WebView::_updateSandbox = ->
	sandbox = 
		forms: 'allow-forms'
		pointerLock: 'allow-pointer-lock'
		popups: 'allow-popups'
		sameOrigin: 'allow-same-origin'
		scripts: 'allow-scripts'
		navigation: 'allow-top-navigation'

	output = ''

	for key of @_sandbox
		if sandbox[key] isnt undefined and @_sandbox[key] is false
			delete sandbox[key]
	for key of sandbox
		output += sandbox[key] + ' '

	@_element.setAttribute 'sandbox', output
	return
